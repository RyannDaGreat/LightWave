<patch-1.0 appVersion="1.0.12">
   <comment type="patch/comment" x="14" y="14" text="Paraphonic Dark Strings Patch by T.Rochebois (aka Smashed Transistors/TiaR)"/>
   <obj type="midi/in/pgm" uuid="6165409901fee4a0781b41bac3513f51c2120d67" name="pgm_1" x="490" y="28">
      <params/>
      <attribs/>
   </obj>
   <obj type="patch/load i" uuid="b79124f5b7d1e8b39e187677ddab6260ce8c60a3" name="load_1" x="574" y="28">
      <params/>
      <attribs/>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_4" x="28" y="42">
      <params>
         <frac32.s.map name="pitch" value="6.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_3" x="126" y="42">
      <params>
         <frac32.s.map name="pitch" value="-5.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_2" x="224" y="42">
      <params>
         <frac32.s.map name="pitch" value="20.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_1" x="322" y="42">
      <params>
         <frac32.s.map name="pitch" value="15.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 4" uuid="d464e7be146a755212e37afdb57a018c87b3f54" name="mix_3" x="714" y="42">
      <params>
         <frac32.u.map name="gain1" value="10.5"/>
         <frac32.u.map name="gain2" value="2.5"/>
         <frac32.u.map name="gain3" value="4.0"/>
         <frac32.u.map name="gain4" value="4.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="conv/bipolar2unipolar" uuid="f6f63d71053d572d3c795f83c7ec11dfbbce82dd" name="bipolar2unipolar_1" x="798" y="42">
      <params/>
      <attribs/>
   </obj>
   <obj type="midi/in/touch" uuid="7e3a4d718388f6d5213accadf5a80121a7c35cc9" name="touch_1" x="966" y="42">
      <params/>
      <attribs/>
   </obj>
   <obj type="kfilter/lowpass" uuid="4f0d68b39b6f6b1c1d371b028d84391d14062d68" name="lowpass_1" x="1050" y="42">
      <params>
         <frac32.s.map name="freq" value="-11.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*" uuid="922423f2db9f222aa3e5ba095778288c446da47a" name="*_1" x="1176" y="42">
      <params/>
      <attribs/>
   </obj>
   <obj type="midi/in/bend" uuid="7bd8cace52a8c26ed61d80f65e238408d5d621f4" name="bend_1" x="28" y="154">
      <params/>
      <attribs/>
   </obj>
   <obj type="lfo/sine" uuid="75f7330c26a13953215dccc3b7b9008545c9daa9" name="sine_5" x="112" y="154">
      <params>
         <frac32.s.map name="pitch" value="5.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="math/*c" uuid="7d5ef61c3bcd571ee6bbd8437ef3612125dfb225" name="*c_1" x="210" y="154">
      <params>
         <frac32.u.map name="amp" value="0.39999961853027344"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 1" uuid="26fb1fe4ed25d8bc2ac4a3f91ab6b80ed6d9d4fa" name="mix_4" x="308" y="154">
      <params>
         <frac32.u.map name="gain1" MidiCC="1" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <patchobj type="patch/object" uuid="8b03c296-8c05-4a5c-9658-dabae1341efc" name="object_1" x="28" y="308">
      <params>
         <frac32.u.map name="H1" value="64.0"/>
         <frac32.u.map name="H2" MidiCC="1" value="0.0"/>
         <frac32.u.map name="fb1" value="47.0"/>
         <frac32.u.map name="fb0" value="32.5"/>
      </params>
      <attribs/>
      <object id="patch/object" uuid="8b03c296-8c05-4a5c-9658-dabae1341efc">
         <sDescription>String</sDescription>
         <license>BSD</license>
         <inlets>
            <frac32.positive name="fbMod" description="fbMod"/>
            <frac32.bipolar name="bend" description="+- 12 semitones"/>
         </inlets>
         <outlets>
            <frac32buffer.bipolar name="out"/>
         </outlets>
         <displays/>
         <params>
            <frac32.u.map name="H1" description="Harm.1"/>
            <frac32.u.map name="H2" description="Harm.2"/>
            <frac32.u.map name="fb1"/>
            <frac32.u.map name="fb0"/>
         </params>
         <attribs/>
         <includes/>
         <code.declaration><![CDATA[static const int NB_OSCS = 85;
int32_t g[NB_OSCS];  // k rate
int32_t AREnv[NB_OSCS]; // k rate filtered g
int32_t dp[NB_OSCS]; // delta phase
uint32_t p[NB_OSCS]; // phase
int32_t fy[NB_OSCS]; // filtered outputs
int32_t attack[NB_OSCS]; // attack rate
int32_t release[NB_OSCS]; // attack rate
uint8_t gates[128];
int32_t rnd=137137137;]]></code.declaration>
         <code.init><![CDATA[int i;
for(i=0;i<NB_OSCS;i++) {
  rnd = rnd * 196314165 + 907633515;
  int32_t detune = rnd>>14;  // rnd>>12 for circus organ
  MTOFEXTENDED((((i - 40) << 21) + detune), dp[i]);
	p[i] = rnd = rnd * 196314165 + 907633515;;
	fy[i]=AREnv[i]=g[i]=0;
	
	attack[i] =0x01000000 + 0x08000000/(NB_OSCS+2-i);
	release[i]=0x00800000 + 0x01700000/(NB_OSCS+2-i);
	
}

for (i=0;i<128;i++)
	gates[i]=0;]]></code.init>
         <code.krate><![CDATA[// Pitch bend by SMMUL of freq:
// MTOFEXTENDED gives us:
// 0x04C747D1            -> 0x10000000  i.e. 1.0q28
// 0x04C747D1 + (12<<21) -> 0x20000002  i.e. 2.0q28
// 0x04C747D1 - (12<<21) -> 0x08000004  i.e. 0.5q28
// so the 0x04C747D1 gives us a q28 bendFactor
int32_t bendFactor;
MTOFEXTENDED(0x04C747D1 + (inlet_bend*12)/64,bendFactor);
int i,j;
for(i = 0; i < NB_OSCS; i++){
	g[i] = 0;
}
for(i = 0; i < NB_OSCS-12; i++){
	if (gates[i+24] != 0) {
		g[i] += param_H1;
		g[i+12] += param_H2;
	}
}
for(i=NB_OSCS-12;i<NB_OSCS;i++){
	if (gates[i+24] != 0) {
		g[i] += param_H1+(param_H2>>1);
	}
}

for(j = 0; j < BUFSIZE; j++) {
	outlet_out[j] = 0;
}
//int32_t fb = param_fb<<4;
int32_t fb = ___SMMUL(param_fb1,                inlet_fbMod <<4    );
        fb = ___SMMLA(param_fb0, (((1<<27)-1) - inlet_fbMod)<<4, fb);
fb <<= 5;
for(i = 0; i < NB_OSCS; i++) {
// ________________________________________________________________________________
//                                                                          AR env
  int32_t interpEnv = AREnv[i];      // audio rate interpolated env start point
  AREnv[i] = __SMMLA(g[i] > AREnv[i] ? attack[i] : release[i], g[i] - AREnv[i], AREnv[i]);
  int32_t deltaEnv = (AREnv[i] - interpEnv) >> 4;  // delta for linear interp on 16 samples
// ________________________________________________________________________________
  int32_t _fy = fy[i];
  //                     q31     q28
  int32_t _dp= ___SMMUL(dp[i], bendFactor)<<4;
// ________________________________________________________________________________
  for(j = 0; j < BUFSIZE; j++) {
    p[i] += _dp;
    int32_t y = sine2t[ ((uint32_t)(p[i] + (___SMMUL(_fy, fb)) )) >> 20 ];
    int32_t out2 = ___SMMLS(_fy, _fy, 0x20000000);
    _fy = (_fy >> 1) + (y >> 1);
    interpEnv += deltaEnv;
    outlet_out[j] = __SMMLA(out2, interpEnv, outlet_out[j]);
  }
// ________________________________________________________________________________
  fy[i] = _fy;
// ________________________________________________________________________________
}]]></code.krate>
         <code.midihandler><![CDATA[if(status == MIDI_NOTE_ON + attr_midichannel) {
  gates[data1 & 0x7F] = data2;
} else if(status == MIDI_NOTE_OFF + attr_midichannel) {
  gates[data1 & 0x7F] = 0;
} else if ((status == attr_midichannel + MIDI_CONTROL_CHANGE)&&(data1 == MIDI_C_ALL_NOTES_OFF)) {
  for(int i=0;i<128;i++) gates[data1 & 0x7F] = 0;
}]]></code.midihandler>
      </object>
   </patchobj>
   <obj type="filter/hp1" uuid="abea7276611b289bed35b80345a6bc4efd4d9a4e" name="hp1_1" x="98" y="308">
      <params>
         <frac32.s.map name="freq" value="-24.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="tiar/dist/DPSoftClip" uuid="4664e423-ca15-4925-952a-6d150aa652da" name="DPSoftClip_1" x="196" y="308">
      <params>
         <frac32.u.map name="InGain" value="9.5"/>
         <frac32.u.map name="OutGain" value="18.5"/>
      </params>
      <attribs/>
   </obj>
   <obj type="fx/chorus" uuid="57166909-092c-47d4-9cdd-f90ff51e3ed6" name="obj_3" x="336" y="308">
      <params>
         <frac32.u.map name="depth" value="0.5999999046325684"/>
         <frac32.s.map name="speed" value="4.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="filter/allpass" uuid="59cc8e3d8044e145e1eb908baa5a7d3ed2ec5f72" name="allpass_1" x="462" y="308">
      <params>
         <frac32.s.map name="g" value="40.0"/>
      </params>
      <attribs>
         <spinner attributeName="delay" value="4051"/>
      </attribs>
   </obj>
   <obj type="fx/chorus" uuid="57166909-092c-47d4-9cdd-f90ff51e3ed6" name="obj_1" x="574" y="308">
      <params>
         <frac32.u.map name="depth" value="10.5"/>
         <frac32.s.map name="speed" value="-58.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 4" uuid="e6f9a0cc7aadc1b89516143cf1ccb79b3538d05a" name="mix_1" x="714" y="308">
      <params>
         <frac32.u.map name="gain1" value="32.0"/>
         <frac32.u.map name="gain2" value="32.0"/>
         <frac32.u.map name="gain3" value="32.0"/>
         <frac32.u.map name="gain4" value="32.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="filter/allpass" uuid="59cc8e3d8044e145e1eb908baa5a7d3ed2ec5f72" name="allpass_3" x="462" y="448">
      <params>
         <frac32.s.map name="g" value="40.0"/>
      </params>
      <attribs>
         <spinner attributeName="delay" value="2018"/>
      </attribs>
   </obj>
   <obj type="fx/chorus" uuid="57166909-092c-47d4-9cdd-f90ff51e3ed6" name="obj_2" x="574" y="448">
      <params>
         <frac32.u.map name="depth" value="33.5"/>
         <frac32.s.map name="speed" value="-64.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="filter/allpass" uuid="59cc8e3d8044e145e1eb908baa5a7d3ed2ec5f72" name="allpass_4" x="224" y="490">
      <params>
         <frac32.s.map name="g" value="-46.0"/>
      </params>
      <attribs>
         <spinner attributeName="delay" value="747"/>
      </attribs>
   </obj>
   <obj type="fx/chorus" uuid="57166909-092c-47d4-9cdd-f90ff51e3ed6" name="obj_6" x="322" y="490">
      <params>
         <frac32.u.map name="depth" value="0.5999999046325684"/>
         <frac32.s.map name="speed" value="0.0"/>
      </params>
      <attribs/>
   </obj>
   <obj type="audio/out stereo" uuid="a1ca7a567f535acc21055669829101d3ee7f0189" name="out_1" x="910" y="532">
      <params/>
      <attribs/>
   </obj>
   <obj type="fx/chorus" uuid="57166909-092c-47d4-9cdd-f90ff51e3ed6" name="obj_5" x="350" y="658">
      <params>
         <frac32.u.map name="depth" value="0.19999980926513672"/>
         <frac32.s.map name="speed" value="5.899999618530273">
            <modulators>
               <modulation sourceName="AftTch" modName="" value="-11.0"/>
            </modulators>
         </frac32.s.map>
      </params>
      <attribs/>
   </obj>
   <obj type="filter/allpass" uuid="59cc8e3d8044e145e1eb908baa5a7d3ed2ec5f72" name="allpass_2" x="462" y="658">
      <params>
         <frac32.s.map name="g" value="40.0"/>
      </params>
      <attribs>
         <spinner attributeName="delay" value="789"/>
      </attribs>
   </obj>
   <obj type="fx/chorus" uuid="57166909-092c-47d4-9cdd-f90ff51e3ed6" name="obj_4" x="574" y="658">
      <params>
         <frac32.u.map name="depth" value="26.0"/>
         <frac32.s.map name="speed" value="-62.89999961853027"/>
      </params>
      <attribs/>
   </obj>
   <obj type="mix/mix 4" uuid="e6f9a0cc7aadc1b89516143cf1ccb79b3538d05a" name="mix_2" x="714" y="658">
      <params>
         <frac32.u.map name="gain1" value="32.0"/>
         <frac32.u.map name="gain2" value="32.0"/>
         <frac32.u.map name="gain3" value="32.0"/>
         <frac32.u.map name="gain4" value="32.0"/>
      </params>
      <attribs/>
   </obj>
   <nets>
      <net>
         <source obj="hp1_1" outlet="out"/>
         <dest obj="DPSoftClip_1" inlet="in"/>
      </net>
      <net>
         <source obj="object_1" outlet="out"/>
         <dest obj="hp1_1" inlet="in"/>
      </net>
      <net>
         <source obj="DPSoftClip_1" outlet="out"/>
         <dest obj="obj_3" inlet="in"/>
         <dest obj="allpass_4" inlet="in"/>
      </net>
      <net>
         <source obj="mix_1" outlet="out"/>
         <dest obj="out_1" inlet="left"/>
      </net>
      <net>
         <source obj="allpass_1" outlet="out"/>
         <dest obj="obj_1" inlet="in"/>
      </net>
      <net>
         <source obj="allpass_3" outlet="out"/>
         <dest obj="obj_2" inlet="in"/>
         <dest obj="obj_5" inlet="in"/>
      </net>
      <net>
         <source obj="mix_2" outlet="out"/>
         <dest obj="out_1" inlet="right"/>
      </net>
      <net>
         <source obj="obj_1" outlet="L"/>
         <dest obj="mix_1" inlet="in1"/>
      </net>
      <net>
         <source obj="obj_3" outlet="L"/>
         <dest obj="mix_1" inlet="in2"/>
      </net>
      <net>
         <source obj="obj_2" outlet="L"/>
         <dest obj="mix_1" inlet="in3"/>
      </net>
      <net>
         <source obj="obj_1" outlet="R"/>
         <dest obj="mix_2" inlet="in1"/>
      </net>
      <net>
         <source obj="obj_3" outlet="R"/>
         <dest obj="allpass_3" inlet="in"/>
         <dest obj="mix_2" inlet="in2"/>
      </net>
      <net>
         <source obj="obj_2" outlet="R"/>
         <dest obj="mix_2" inlet="in3"/>
      </net>
      <net>
         <source obj="allpass_2" outlet="out"/>
         <dest obj="obj_4" inlet="in"/>
      </net>
      <net>
         <source obj="obj_4" outlet="L"/>
         <dest obj="mix_1" inlet="bus_in"/>
      </net>
      <net>
         <source obj="obj_4" outlet="R"/>
         <dest obj="mix_2" inlet="bus_in"/>
      </net>
      <net>
         <source obj="obj_5" outlet="L"/>
         <dest obj="allpass_2" inlet="in"/>
      </net>
      <net>
         <source obj="obj_5" outlet="R"/>
         <dest obj="allpass_1" inlet="in"/>
      </net>
      <net>
         <source obj="*_1" outlet="result"/>
         <dest obj="object_1" inlet="fbMod"/>
      </net>
      <net>
         <source obj="touch_1" outlet="o"/>
         <dest obj="lowpass_1" inlet="in"/>
      </net>
      <net>
         <source obj="lowpass_1" outlet="out"/>
         <dest obj="*_1" inlet="a"/>
      </net>
      <net>
         <source obj="bipolar2unipolar_1" outlet="o"/>
         <dest obj="*_1" inlet="b"/>
      </net>
      <net>
         <source obj="mix_3" outlet="out"/>
         <dest obj="bipolar2unipolar_1" inlet="i"/>
      </net>
      <net>
         <source obj="sine_4" outlet="wave"/>
         <dest obj="mix_3" inlet="in1"/>
      </net>
      <net>
         <source obj="sine_3" outlet="wave"/>
         <dest obj="mix_3" inlet="in2"/>
      </net>
      <net>
         <source obj="sine_2" outlet="wave"/>
         <dest obj="mix_3" inlet="in3"/>
      </net>
      <net>
         <source obj="sine_1" outlet="wave"/>
         <dest obj="mix_3" inlet="in4"/>
      </net>
      <net>
         <source obj="obj_6" outlet="R"/>
         <dest obj="mix_2" inlet="in4"/>
      </net>
      <net>
         <source obj="obj_6" outlet="L"/>
         <dest obj="mix_1" inlet="in4"/>
      </net>
      <net>
         <source obj="allpass_4" outlet="out"/>
         <dest obj="obj_6" inlet="in"/>
      </net>
      <net>
         <source obj="bend_1" outlet="bend"/>
         <dest obj="mix_4" inlet="bus_in"/>
      </net>
      <net>
         <source obj="mix_4" outlet="out"/>
         <dest obj="object_1" inlet="bend"/>
      </net>
      <net>
         <source obj="sine_5" outlet="wave"/>
         <dest obj="*c_1" inlet="in"/>
      </net>
      <net>
         <source obj="*c_1" outlet="out"/>
         <dest obj="mix_4" inlet="in1"/>
      </net>
      <net>
         <source obj="pgm_1" outlet="o"/>
         <dest obj="load_1" inlet="i"/>
      </net>
      <net>
         <source obj="pgm_1" outlet="trig"/>
         <dest obj="load_1" inlet="trig"/>
      </net>
   </nets>
   <settings>
      <subpatchmode>no</subpatchmode>
      <MidiChannel>1</MidiChannel>
      <NPresets>8</NPresets>
      <NPresetEntries>32</NPresetEntries>
      <NModulationSources>0</NModulationSources>
      <NModulationTargetsPerSource>0</NModulationTargetsPerSource>
      <Author>SmashedTransistors (T.Rochebois)</Author>
      <License>LGPL</License>
   </settings>
   <notes><![CDATA[Paraphonic Church Organ Patch by T.Rochebois (aka Smashed Transistors/TiaR)

It is totally polyphonic (from MIDI note 5 (F) to MIDI note 114 (F#))

It is based on 91 oscillators.
Some oscillators are pure sine.
Some are self phase modulated sine oscs (they generate even and odd harmonics).
Others are self square phase modulated (they only have odd harmonics).
These generators roughly simulates the different organ pipes.

When a key is played, multiple "pipes" are triggered.

H1 to H16 control the mixture : what relative pipes will be triggered by a key.
(D5 and D10 are rather Detuned harmonics.)

fb controls the pipes brilliance.
0 is dull
45 is optimal.]]></notes>
   <windowPos>
      <x>172</x>
      <y>40</y>
      <width>1459</width>
      <height>922</height>
   </windowPos>
</patch-1.0>